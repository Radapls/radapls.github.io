---
import { getLocalePaths, LOCALES } from '../../i18n';
---

<div class="language-select-container">
	<label for="language-select"> </label>
	<select
		id="language-select"
		name="language-select"
		data-languageSelect
		aria-label={Astro.currentLocale === 'es'
			? 'Cambiar idioma del sitio'
			: Astro.currentLocale === 'pt-br'
				? 'Alterar idioma do site'
				: 'Change site language'}
	>
		{
			getLocalePaths(Astro.url).map(({ path, lang }) => (
				<option
					label={LOCALES[lang].label}
					value={path}
					data-lang={lang}
					selected={lang === Astro.currentLocale}
					dir={LOCALES[lang].dir || null}
				/>
			))
		}
	</select>
</div>

<script is:inline>
	const setupLanguageSelect = () => {
		const selects = document.querySelectorAll('[data-languageSelect]');
		selects.forEach((select) => {
			select.addEventListener('change', (event) => {
				const lang = event.target?.selectedOptions[0]?.dataset.lang;
				const url = event.target?.value;
				if (lang && url) {
					localStorage.setItem('selectedLang', lang);
					location.href = url;
				}
			});
		});
	};

	setupLanguageSelect();

	// Re-run on Astro view transitions
	document.addEventListener('astro:after-swap', setupLanguageSelect);
</script>

<style>
	select {
		font-family: 'Poppins';
		border-radius: 4px; /* Bordes redondeados */
		font-size: var(--small-font-size);
		font-weight: var(--font-medium);
		height: 30px;
		padding: 0 15px;
		background-color: var(--body-color);
		color: var(--title-color);
	}
</style>
